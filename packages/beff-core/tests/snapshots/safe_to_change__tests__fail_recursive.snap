---
source: packages/beff-core/tests/safe_to_change.rs
expression: "print_errors(from, to, &errors)"
---
from:

        type A = string;
        type AObject = {p: A, arr: AObject[]};
        export default {
            "/hello": {
                get: (): AObject => impl()
            }
        }
        
to:

        type B = string;
        type BObject = {p2: B, arr: BObject[]};
        export default {
            "/hello": {
                get: (): BObject => impl()
            }
        }
        

# Error at GET /hello:

Response body is not compatible.

```ts
type Old = {
    "arr": Array<Old>;
    "p": string;
};
```

```ts
type New = {
    "arr": Array<New>;
    "p2": string;
};
```

```ts
type t_1 = Array<{
    "arr": t_1;
    "p2": string;
}>;

type t_6 = Array<{
    "arr": t_6;
    "p": string;
}>;

type Diff = ({
    "arr": Array<{
        "arr": t_1;
        "p2": string;
    }>;
    "p2": string;
} & Not<{
    "arr": Array<{
        "arr": t_6;
        "p": string;
    }>;
    "p": string;
}>);
```

Previous clients will not support this potential response:

```js
{
    "arr": [],
    "p": null,
    "p2": "abc"
};
```

diff:

```js
{
    "arr": [],
    "p": null,
    "p2": "abc"
};
```

evidence:

```js
{
    "arr": [
        {
            "arr": recursion(),
            "p2": "abc"
        }
    ],
    "p2": "abc"
};
```
