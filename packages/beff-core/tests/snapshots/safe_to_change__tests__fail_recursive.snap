---
source: packages/beff-core/tests/safe_to_change.rs
expression: "print_errors(from, to, &errors)"
---
from:

        type A = string;
        type AObject = {p: A, arr: AObject[]};
        export default {
            "/hello": {
                get: (): AObject => impl()
            }
        }
        
to:

        type B = string;
        type BObject = {p2: B, arr: BObject[]};
        export default {
            "/hello": {
                get: (): BObject => impl()
            }
        }
        

# Error at GET /hello:

Response body is not compatible.

```ts
type Old = {
    "arr": Array<Old>;
    "p": string;
};
```

```ts
type New = {
    "arr": Array<New>;
    "p2": string;
};
```

```ts
type t_2 = {
    "arr": Array<t_2>;
    "p2": string;
};

type t_6 = {
    "arr": Array<t_6>;
    "p": string;
};

type Diff = {
    "arr": (Array<{
        "arr": Array<t_2>;
        "p2": string;
    }> & Not<Array<{
        "arr": Array<t_6>;
        "p": string;
    }>>);
    "p"?: (null | boolean | number | Object | Array);
    "p2": string;
};
```

Previous clients will not support this potential response:

```js
{
    "arr": [],
    "p": null,
    "p2": "abc"
};
```
